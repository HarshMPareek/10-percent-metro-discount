setwd("~/Library/CloudStorage/OneDrive-UniversityofToronto/STA304/Final Project/10-percent-metro-discount")
# Plot price distribution by vendor and category
ggplot(grocery_data, aes(x = vendor, y = current_price, fill = vendor, color = vendor)) +
geom_boxplot(outlier.shape = NA, alpha = 0.7, width = 0.6) +
geom_jitter(width = 0.2, alpha = 0.6, size = 0.7) + # Adjusted alpha and size for visibility
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Dark2") + # Add a distinct palette for points
labs(
title = "Price Distribution by Vendor and Category",
x = "Vendor",
y = "Price (CAD)"
) +
theme_minimal(base_size = 12) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none"
) +
facet_wrap(~ category, scales = "free_y")
#| include: false
#| warning: false
#| message: false
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(dplyr)
library(readr)
library(knitr)
library(kableExtra)
library(rstanarm)
library(broom)
library(arrow)      # For reading Parquet files if needed
library(here)       # For file paths
library(patchwork)  # For combining ggplots
library(modelsummary)
library(bayesplot)
library(viridis)
library(cowplot)
library(stringr)
# Load the data
grocery_data <- read_parquet(here("data/02-analysis_data/cleaned_products_with_prices.parquet"))
# Load the fitted model
model <- readRDS(file = here::here("models/price_model_stanarm.rds"))
# Plot price distribution by vendor and category
ggplot(grocery_data, aes(x = vendor, y = current_price, fill = vendor, color = vendor)) +
geom_boxplot(outlier.shape = NA, alpha = 0.7, width = 0.6) +
geom_jitter(width = 0.2, alpha = 0.6, size = 0.7) + # Adjusted alpha and size for visibility
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Dark2") + # Add a distinct palette for points
labs(
title = "Price Distribution by Vendor and Category",
x = "Vendor",
y = "Price (CAD)"
) +
theme_minimal(base_size = 12) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none"
) +
facet_wrap(~ category, scales = "free_y")
